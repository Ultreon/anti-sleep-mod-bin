# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [ pull_request, push ]

jobs:
  build-windows:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17    # Minimum supported by Minecraft
        ]
        # and run on both Linux and not Windows
        os: [windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: build
        run: ./gradlew linkMingwX64
        env:
          GITHUB_BUILD_NUMBER: ${{ github.run_number }}
      - name: capture windows build artifacts
        if: ${{ matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Windows
          path: build/bin/
  build-linux:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17    # Minimum supported by Minecraft
        ]
        # and run on both Linux and not Windows
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: build
        run: ./gradlew linkLinuxX64
        env:
          GITHUB_BUILD_NUMBER: ${{ github.run_number }}
      - name: capture windows build artifacts
        if: ${{ matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Linux
          path: build/bin/
